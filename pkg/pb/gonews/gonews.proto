syntax = "proto3";

package gonews;

option go_package = "github.com/RTS-1989/go-news-svc/pkb/pb/gonews";

import "comment/comment.proto";

service GoNewsService {
  rpc Posts(PostsRequest) returns (PostsResponse) {}
  rpc NewsFullDetailed(OneNewsRequest) returns (DetailedNewsResponse) {}
  rpc NewsShortDetailed(OneNewsRequest) returns (OnePostResponse) {}
  rpc FilterNews(FilterNewsRequest) returns (ListPostsResponse) {}
  rpc ListNews(ListPostsRequest) returns (ListPostsResponse) {}
}

message PostsRequest {
  int64 newsCountGet = 1;
}

message OneNewsRequest {
  int64 newsId = 1;
}

message FilterNewsRequest {
  int64  user_id = 1;
  string filterValue = 2;
   int32 page_size = 3;
  int32 page = 4;
}

message Post {
  int64 ID = 1;
  string title = 2;
  string content = 3;
  int64 pubTime = 4;
  string link = 5;
  string sourceXmlLink = 6;
}

message OnePostResponse {
  int64 status = 1;
  string error = 2;
  Post posts = 3;
}

message PostsResponse {
  int64 status = 1;
  string error = 2;
  repeated Post posts = 3;
  }

message Pagination {
  int32 pages = 1;
  int32 currentPage = 2;
  int32 postsOnPage = 3;
}

message ListPostsRequest {
  int64 newsCountGet = 1;
  int64 user_id = 2;
  int32 page_size = 3;
  int32 page = 4;
}

message ListPostsResponse {
  int64 status = 1;
  string error = 2;
  Pagination paginationInfo = 3;
  repeated Post posts = 4;
  }

message DetailedNewsResponse {
  int64 status = 1;
  string error = 2;
  gonews.Post post = 3;
  repeated comment.Comment comments = 4;
}
